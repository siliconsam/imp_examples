%begin
%const %integer q14 = 99
%integer p

%include "registers.arm.inc"

%routine call signal
   printstring("Signal called")
   newline
%end

%routine SIGNAL
   {Corrupts everything}
   *STMDB _ Sp!, <R1, R2, R3, Fp, Sb, Link>
   Call Signal
%end

%routine PRIMDIV               {signed divide}
   {Corrupts: 012345}
   {R1//R2, Quo=R0, Rem=R1}
   %label L0, L1, L2
   *CMPS   _ R2, #0
   *BNE    _ L0
   *MOV _ R1, #14;  *MOV _ R2, #2;  *MOV _ R3, #0
   *STMDB _ Sp!, <R1, R2, R3, Fp, Sb, Link>
   Call Signal
L0:*MOV    _ R4, #1                {result sign}
   *RSBLT  _ R2, R2, #0            {R2 = |R2|}
   *RSBLT  _ R4, R4, #0            {invert result sign}
   *ADDS   _ R5, R1, #0            {preserve Dividend & test sign}
   *RSBLT  _ R1, R1, #0            {R1 = |R1|}
   *RSBLT  _ R4, R4, #0            {invert result sign}
   *MOV    _ R3, #1
L1:*CMPS   _ R2, #16_80000000
   *CMPCCS _ R2, R1
   *MOVCC  _ R2, R2, %LSL #1
   *MOVCC  _ R3, R3, %LSL #1
   *BCC    _ L1
   *MOV    _ R0, #0
L2:*CMPS   _ R1, R2
   *SUBCS  _ R1, R1, R2
   *ADDCS  _ R0, R0, R3
   *MOVS   _ R3, R3, %LSR #1
   *MOVNE  _ R2, R2, %LSR #1
   *BNE    _ L2
   {now adjust signs of quotient & remainder}
   *CMPS   _ R4, #0
   *RSBLT  _ R0, R0, #0         {negate quotient}
   *CMPS   _ R5, #0
   *RSBLT  _ R1, R1, #0         {negate remainder}
   *MOV    _ Pc, Link
%end

  %own %longlonginteger fred
  %integer i,j,k,myebp
  %constinteger ebp = 5
  %label notok
  fred = 100
  i=addr(fred)

!  *=1234567

!  *MOV _  myebp, ebp
!  *MOV _  k, 16_21
notok:

!  *MOV _  #49, k
!  *MOV _  fred, j
!  *NOP _
!  *stctl _ 0, 15, 704(0)
!  *lctl _ !$%&*(50+3),     #0,     I[12]
!  *test0 _ notok, 9, I[12]
!  *test1 _ notok, #9, I[12]
!  *test2 _ notok, %9, I[12]
!  *test3 _ notok, !9, I[12]
!  *test4 _ notok, $9, I[12]
!  *test5 _ notok, &9, I[12]
!  *test6 _ notok, *9, I[12]
!  *test7 _ notok, -9, I[12]
!  *test8 _ notok, _9, I[12]

!  *test9 _ notok, +9, I[12]
!  *test10 _ notok, =9, I[12]
  *test11 _ notok, { a comment }#9, I[#12]
!  *test12 _ notok, }9, I[12]
  *test13 _ notok, ~#9, I[12]
  *test14 _ notok, @#9, I[12]
!  *test15 _ notok, :9, I[12]

!  *test15 _ notok, <9, I[12]
!  *test16 _ notok, >9, I[12]
!  *test17 _ notok, ?9, I[12]
!  *test18 _ notok, /9, I[12]
!  *test19 _ notok, \9, I[12]

!  *test20 _ notok, "hello", I[12]
  *test20 _ notok, #3    +     #4,      I[#12]
   *MOVCC  _ R2, R2, %LSL #1

%endofprogram
