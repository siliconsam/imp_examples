!Revision history:
! 001 23-Jun-88 PSR Adjusted SWJUMP to skip extra debugger word
!                   and jump from the in-line code

%include "registers.arm.inc"

%externalroutinespec Call Signal %alias "3L___signal"

%permroutine PRIMDIV               {signed divide}
   {Corrupts: 012345}
   {R1//R2, Quo=R0, Rem=R1}
   %label L0, L1, L2

   *CMPS   _ R2, #0
   *BNE    _ L0
   *MOV _ R1, #14
   *MOV _ R2, #2
   *MOV _ R3, #0
   *STMDB _ Sp!, <R1, R2, R3, Fp, Sb, Link>
   Call Signal
L0:
   *MOV    _ R4, #1                {result sign}
   *RSBLT  _ R2, R2, #0            {R2 = |R2|}
   *RSBLT  _ R4, R4, #0            {invert result sign}
   *ADDS   _ R5, R1, #0            {preserve Dividend & test sign}
   *RSBLT  _ R1, R1, #0            {R1 = |R1|}
   *RSBLT  _ R4, R4, #0            {invert result sign}
   *MOV    _ R3, #1
L1:
   *CMPS   _ R2, #16_80000000
   *CMPCCS _ R2, R1
   *MOVCC  _ R2, R2, %LSL #1
   *MOVCC  _ R3, R3, %LSL #1
   *BCC    _ L1
   *MOV    _ R0, #0
L2:
   *CMPS   _ R1, R2
   *SUBCS  _ R1, R1, R2
   *ADDCS  _ R0, R0, R3
   *MOVS   _ R3, R3, %LSR #1
   *MOVNE  _ R2, R2, %LSR #1
   *BNE    _ L2
   {now adjust signs of quotient & remainder}
   *CMPS   _ R4, #0
   *RSBLT  _ R0, R0, #0         {negate quotient}
   *CMPS   _ R5, #0
   *RSBLT  _ R1, R1, #0         {negate remainder}
   *MOV    _ Pc, Link

%end

%endoffile
